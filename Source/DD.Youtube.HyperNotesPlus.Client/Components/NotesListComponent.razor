@inject INoteService NoteService

<h3>NotesListComponent</h3>


@if (isLoading)
{
    <LoadingComponent />
}
else
{
    @foreach (var note in notes)
    {
        @if (note.State == Domain.Common.Definitions.StateEnum.Enabled)
        {
            <article class="media">
                <figure class="media-left">
                    <p class="image is-64x64">
                        <img src="https://bulma.io/images/placeholders/128x128.png">
                    </p>
                </figure>
                <div class="media-content">
                    <div class="content">
                        <p>
                            <strong>@note.Name</strong> <small>@@Daniel</small> <small>@note.CreatedOn</small>
                            <br>
                            @note.Content
                        </p>
                    </div>
                    <nav class="level is-mobile">
                        <div class="level-left">
                            <a class="level-item">
                                <span class="icon is-small"><i class="fas fa-reply"></i></span>
                            </a>
                            <a class="level-item">
                                <span class="icon is-small"><i class="fas fa-retweet"></i></span>
                            </a>
                            <a class="level-item">
                                <span class="icon is-small"><i class="fas fa-heart"></i></span>
                            </a>
                        </div>
                    </nav>
                </div>
                <div class="media-right">
                    <button class="delete"></button>
                </div>
            </article>
        }
    }
}


@code {

    private List<Note> notes = new List<Note>();
    private bool isLoading = true;


    protected override async Task OnInitializedAsync()
    {
        var response = await NoteService.GetAllNotes();
        notes = response.ToList();
        isLoading = false;
    }

}
